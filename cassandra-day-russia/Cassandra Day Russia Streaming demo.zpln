{
  "paragraphs": [
    {
      "text": "%md\n\n# Введение\n\nДанный блокнот (notebook) содержит пример использования Apache Spark + Cassandra для потоковой обработки данных, поступающих из Kafka (через [модифицированную версию Kafka Connect Twitter](https://github.com/alexott/kafka-connect-twitter/tree/kafka-2.2-compatibility-and-more)). \n\nОбработка данных заключается:\n\n* чтении данных из Кафки и извлечения нужных полей (`language` & `created_at`)\n* группировки данных по языку с окном в 1 минуту, подсчету данных в данном окне\n* объединении данных с данными в Cassandra - для добавления названия языка\n* записи данных в Cassandra",
      "user": "anonymous",
      "dateUpdated": "2020-05-27T14:56:14+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/text",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h1>Введение</h1>\n<p>Данный блокнот (notebook) содержит пример использования Apache Spark + Cassandra для потоковой обработки данных, поступающих из Kafka (через <a href=\"https://github.com/alexott/kafka-connect-twitter/tree/kafka-2.2-compatibility-and-more\">модифицированную версию Kafka Connect Twitter</a>).</p>\n<p>Обработка данных заключается:</p>\n<ul>\n<li>чтении данных из Кафки и извлечения нужных полей (<code>language</code> &amp; <code>created_at</code>)</li>\n<li>группировки данных по языку с окном в 1 минуту, подсчету данных в данном окне</li>\n<li>объединении данных с данными в Cassandra - для добавления названия языка</li>\n<li>записи данных в Cassandra</li>\n</ul>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590590186598_-789514617",
      "id": "paragraph_1590590186598_-789514617",
      "dateCreated": "2020-05-27T14:36:26+0000",
      "dateStarted": "2020-05-27T14:56:10+0000",
      "dateFinished": "2020-05-27T14:56:10+0000",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:25635"
    },
    {
      "title": "Создаем keyspace и таблицу с данными которые будут использоваться для дополнения данных из потока",
      "text": "%cassandra\n\ncreate keyspace if not exists zep with replication = {'class': 'SimpleStrategy', 'replication_factor': 3};\n\ndrop table if exists  zep.languages;\ncreate table if not exists zep.languages (\n  id text primary key,\n  native_name text\n);",
      "user": "anonymous",
      "dateUpdated": "2020-05-28T09:29:39+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/text",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\n\n<div class=\"container\">\n<div class=\"row text-center\">\n<h4>No Result</h4>\n</div>\n<br/>\n    <div class=\"row\">\n    <div class=\"col-md-3\"></div>\n    <div class=\"col-md-6 col-offset-md-3 table-responsive table-bordered\">\n        <table class=\"table\">\n            <caption><h5>Last query execution info</h5></caption>\n            <thead>\n                <tr>\n                    <th>Info</th>\n                    <th>Value</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>Statement</td>\n                    <td>create table if not exists zep.languages (\n  id text primary key,\n  native_name text\n);</td>\n                </tr>\n                <tr>\n                    <td>Achieved Consistency</td>\n                    <td>N/A</td>\n                </tr>\n                <tr>\n                    <td>Tried Hosts</td>\n                    <td>10.101.33.133:9042</td>\n                </tr>\n                <tr>\n                    <td>Queried Hosts</td>\n                    <td>10.101.33.133:9042</td>\n                </tr>\n                <tr>\n                    <td>Schema In Agreement</td>\n                    <td>true</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    </div>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590579295828_-485986107",
      "id": "paragraph_1590579295828_-485986107",
      "dateCreated": "2020-05-27T11:34:55+0000",
      "dateStarted": "2020-05-28T09:29:39+0000",
      "dateFinished": "2020-05-28T09:29:40+0000",
      "status": "FINISHED",
      "$$hashKey": "object:25636"
    },
    {
      "text": "%cassandra\n\ninsert into zep.languages(id, native_name) values ('en', 'English');\ninsert into zep.languages(id, native_name) values ('de', 'Deutsch');\ninsert into zep.languages(id, native_name) values ('ru', 'Русский');\ninsert into zep.languages(id, native_name) values ('pl', 'Język polski');\ninsert into zep.languages(id, native_name) values ('ja', '日本語 (にほんご)');\ninsert into zep.languages(id, native_name) values ('zh', '漢語');",
      "user": "anonymous",
      "dateUpdated": "2020-05-28T09:29:51+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/text"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\n\n<div class=\"container\">\n<div class=\"row text-center\">\n<h4>No Result</h4>\n</div>\n<br/>\n    <div class=\"row\">\n    <div class=\"col-md-3\"></div>\n    <div class=\"col-md-6 col-offset-md-3 table-responsive table-bordered\">\n        <table class=\"table\">\n            <caption><h5>Last query execution info</h5></caption>\n            <thead>\n                <tr>\n                    <th>Info</th>\n                    <th>Value</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>Statement</td>\n                    <td>insert into zep.languages(id, native_name) values ('zh', '漢語');</td>\n                </tr>\n                <tr>\n                    <td>Achieved Consistency</td>\n                    <td>N/A</td>\n                </tr>\n                <tr>\n                    <td>Tried Hosts</td>\n                    <td>10.101.33.133:9042</td>\n                </tr>\n                <tr>\n                    <td>Queried Hosts</td>\n                    <td>10.101.33.133:9042</td>\n                </tr>\n                <tr>\n                    <td>Schema In Agreement</td>\n                    <td>true</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    </div>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590658184304_-1095672765",
      "id": "paragraph_1590658184304_-1095672765",
      "dateCreated": "2020-05-28T09:29:44+0000",
      "dateStarted": "2020-05-28T09:29:51+0000",
      "dateFinished": "2020-05-28T09:29:52+0000",
      "status": "FINISHED",
      "$$hashKey": "object:25637"
    },
    {
      "title": "проверяем что данные сохранены в таблице",
      "text": "%cassandra\nselect * from zep.languages;",
      "user": "anonymous",
      "dateUpdated": "2020-05-27T14:22:51+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "native_name": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/text",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "id\tnative_name\nru\tРусский\nes\tEspañol\nja\t日本語 (にほんご)\npl\tJęzyk polski\nzh\t漢語\npt\tPortuguês\nen\tEnglish\nit\tItaliano\nde\tDeutsch\nfr\tFrançais\nel\tΕλληνικά\nar\tالعربية\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590579392390_481406372",
      "id": "paragraph_1590579392390_481406372",
      "dateCreated": "2020-05-27T11:36:32+0000",
      "dateStarted": "2020-05-27T14:22:51+0000",
      "dateFinished": "2020-05-27T14:22:51+0000",
      "status": "FINISHED",
      "$$hashKey": "object:25638"
    },
    {
      "text": "%md\n\nДанные в Kafka поступают через [модифицированную версию Kafka Connect Twitter](https://github.com/alexott/kafka-connect-twitter/tree/kafka-2.2-compatibility-and-more).\n",
      "user": "anonymous",
      "dateUpdated": "2020-05-27T14:49:35+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/text",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Данные в Kafka поступают через <a href=\"https://github.com/alexott/kafka-connect-twitter/tree/kafka-2.2-compatibility-and-more\">модифицированную версию Kafka Connect Twitter</a>.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590579719932_2039793796",
      "id": "paragraph_1590579719932_2039793796",
      "dateCreated": "2020-05-27T11:41:59+0000",
      "dateStarted": "2020-05-27T11:43:00+0000",
      "dateFinished": "2020-05-27T11:43:00+0000",
      "status": "FINISHED",
      "$$hashKey": "object:25639"
    },
    {
      "title": "Импортируем требуемые функции и загружаем схему которая будет использоваться для чтения данных из Кафки",
      "text": "%spark\n\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.types._\n\n// Этот файл содержит пример одного сообщения, который будет прочитан для создания схемы, которая будет применена для данных в Kafka.\n// Это только поля которые мы будем обрабатывать, само сообщение содержит гораздо больше полей - текст, пользователь, и т.п.\n// {\"payload\":{\"created_at\": \"Sun Jul 01 07:52:55 +0000 2018\", \"lang\": \"en\"}}\n\nval jsonSample = spark.read.json(\"/tweets-2.json\")\nval schema = jsonSample.schema",
      "user": "anonymous",
      "dateUpdated": "2020-05-27T14:52:43+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import org.apache.spark.sql.functions._\nimport org.apache.spark.sql.types._\n\u001b[1m\u001b[34mjsonSample\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [payload: struct<created_at: string, lang: string>]\n\u001b[1m\u001b[34mschema\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.types.StructType\u001b[0m = StructType(StructField(payload,StructType(StructField(created_at,StringType,true), StructField(lang,StringType,true)),true))\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://10.101.36.104:4040/jobs/job?id=0",
              "$$hashKey": "object:26579"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590579780441_1030996582",
      "id": "paragraph_1590579780441_1030996582",
      "dateCreated": "2020-05-27T11:43:00+0000",
      "dateStarted": "2020-05-27T14:22:58+0000",
      "dateFinished": "2020-05-27T14:23:35+0000",
      "status": "FINISHED",
      "$$hashKey": "object:25640"
    },
    {
      "title": "Инициируем чтение данных из Кафки",
      "text": "%spark\n\nval streamingInputDF = spark.readStream\n      .format(\"kafka\")\n      .option(\"kafka.bootstrap.servers\", \"10.101.36.9:9092\")\n      .option(\"subscribe\", \"tweets2\")\n      .load()",
      "user": "anonymous",
      "dateUpdated": "2020-05-27T14:24:12+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mstreamingInputDF\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [key: binary, value: binary ... 5 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590580999397_-1931390051",
      "id": "paragraph_1590580999397_-1931390051",
      "dateCreated": "2020-05-27T12:03:19+0000",
      "dateStarted": "2020-05-27T14:24:12+0000",
      "dateFinished": "2020-05-27T14:24:13+0000",
      "status": "FINISHED",
      "$$hashKey": "object:25641"
    },
    {
      "title": "Конвертируем key/value поля в строку, и извлекаем данные из JSON",
      "text": "%spark\n\nval tweetDF = streamingInputDF.selectExpr(\"CAST(value AS STRING)\")\n  .select(from_json($\"value\", schema).as(\"tweet\"))\n  .select($\"tweet.payload.created_at\".as(\"created_at\").cast(TimestampType),\n    $\"tweet.payload.lang\".as(\"language\"))\n",
      "user": "anonymous",
      "dateUpdated": "2020-05-27T14:24:15+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mtweetDF\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [created_at: timestamp, language: string]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590581580938_1749512076",
      "id": "paragraph_1590581580938_1749512076",
      "dateCreated": "2020-05-27T12:13:00+0000",
      "dateStarted": "2020-05-27T14:24:15+0000",
      "dateFinished": "2020-05-27T14:24:16+0000",
      "status": "FINISHED",
      "$$hashKey": "object:25642"
    },
    {
      "title": "Группируем данные по языку и минуте, и считаем",
      "text": "%spark\n\nval streamingCountsDF =  tweetDF\n  .where(col(\"language\").isNotNull)\n  .groupBy($\"language\", window($\"created_at\", \"1 minutes\"))\n  .count()\n  .select($\"language\", $\"window.start\".as(\"ts\"), $\"count\")\n",
      "user": "anonymous",
      "dateUpdated": "2020-05-27T14:24:18+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mstreamingCountsDF\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [language: string, ts: timestamp ... 1 more field]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590581876373_1848594083",
      "id": "paragraph_1590581876373_1848594083",
      "dateCreated": "2020-05-27T12:17:56+0000",
      "dateStarted": "2020-05-27T14:24:18+0000",
      "dateFinished": "2020-05-27T14:24:18+0000",
      "status": "FINISHED",
      "$$hashKey": "object:25643"
    },
    {
      "title": "Загружаем таблицу из Cassandra",
      "text": "%spark\n\nimport org.apache.spark.sql.cassandra._\nval lang_details = spark.read.cassandraFormat(\"languages\", \"zep\").load()\nlang_details.printSchema",
      "user": "anonymous",
      "dateUpdated": "2020-05-27T14:24:37+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- id: string (nullable = false)\n |-- native_name: string (nullable = true)\n\nimport org.apache.spark.sql.cassandra._\n\u001b[1m\u001b[34mlang_details\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [id: string, native_name: string]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590586816441_-641397683",
      "id": "paragraph_1590586816441_-641397683",
      "dateCreated": "2020-05-27T13:40:16+0000",
      "dateStarted": "2020-05-27T14:24:37+0000",
      "dateFinished": "2020-05-27T14:24:38+0000",
      "status": "FINISHED",
      "$$hashKey": "object:25644"
    },
    {
      "title": "Объединяем поток с данными из Кассандры",
      "text": "%spark\n\nval joined = streamingCountsDF.join(lang_details, lang_details(\"id\") === streamingCountsDF(\"language\"), \"left_outer\")\n  .select($\"language\", $\"native_name\".as(\"lang_name\"), $\"ts\", $\"count\")",
      "user": "anonymous",
      "dateUpdated": "2020-05-27T14:24:40+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mjoined\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [language: string, lang_name: string ... 2 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590588170348_-1029444409",
      "id": "paragraph_1590588170348_-1029444409",
      "dateCreated": "2020-05-27T14:02:50+0000",
      "dateStarted": "2020-05-27T14:24:41+0000",
      "dateFinished": "2020-05-27T14:24:41+0000",
      "status": "FINISHED",
      "$$hashKey": "object:25645"
    },
    {
      "title": "Создаем таблицу для хренения статистики",
      "text": "%cassandra\ndrop table if exists zep.languages_stats;\ncreate table if not exists zep.languages_stats (\n  language text,\n  lang_name text static,\n  ts timestamp,\n  count int,\n  primary key(language, ts)\n) with clustering order by (ts desc);\n",
      "user": "anonymous",
      "dateUpdated": "2020-05-27T14:24:43+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/text",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\n\n<div class=\"container\">\n<div class=\"row text-center\">\n<h4>No Result</h4>\n</div>\n<br/>\n    <div class=\"row\">\n    <div class=\"col-md-3\"></div>\n    <div class=\"col-md-6 col-offset-md-3 table-responsive table-bordered\">\n        <table class=\"table\">\n            <caption><h5>Last query execution info</h5></caption>\n            <thead>\n                <tr>\n                    <th>Info</th>\n                    <th>Value</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>Statement</td>\n                    <td>create table if not exists zep.languages_stats (\n  language text,\n  lang_name text static,\n  ts timestamp,\n  count int,\n  primary key(language, ts)\n) with clustering order by (ts desc);</td>\n                </tr>\n                <tr>\n                    <td>Achieved Consistency</td>\n                    <td>N/A</td>\n                </tr>\n                <tr>\n                    <td>Tried Hosts</td>\n                    <td>10.101.33.133:9042</td>\n                </tr>\n                <tr>\n                    <td>Queried Hosts</td>\n                    <td>10.101.33.133:9042</td>\n                </tr>\n                <tr>\n                    <td>Schema In Agreement</td>\n                    <td>true</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    </div>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590581954891_-537058260",
      "id": "paragraph_1590581954891_-537058260",
      "dateCreated": "2020-05-27T12:19:14+0000",
      "dateStarted": "2020-05-27T14:24:43+0000",
      "dateFinished": "2020-05-27T14:24:46+0000",
      "status": "FINISHED",
      "$$hashKey": "object:25646"
    },
    {
      "title": "Начинаем писать стрим в Кассандру - это запускает обработку потока",
      "text": "%spark\nval query = joined.writeStream\n      .outputMode(\"update\")\n      .format(\"org.apache.spark.sql.cassandra\")\n      .option(\"checkpointLocation\", \"/tweets-checkpoint\")\n      .option(\"keyspace\", \"zep\")\n      .option(\"table\", \"languages_stats\")\n      .start()\n\n",
      "user": "anonymous",
      "dateUpdated": "2020-05-27T14:24:50+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mquery\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.streaming.StreamingQuery\u001b[0m = org.apache.spark.sql.execution.streaming.StreamingQueryWrapper@789502b\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590581927614_-379647953",
      "id": "paragraph_1590581927614_-379647953",
      "dateCreated": "2020-05-27T12:18:47+0000",
      "dateStarted": "2020-05-27T14:24:50+0000",
      "dateFinished": "2020-05-27T14:24:50+0000",
      "status": "FINISHED",
      "$$hashKey": "object:25647"
    },
    {
      "title": "Проверяем прогресс нашего запроса",
      "text": "%spark\n\nquery.status",
      "user": "anonymous",
      "dateUpdated": "2020-05-27T14:31:53+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mres5\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.streaming.StreamingQueryStatus\u001b[0m =\n{\n  \"message\" : \"Processing new data\",\n  \"isDataAvailable\" : true,\n  \"isTriggerActive\" : true\n}\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590584528966_-1415344640",
      "id": "paragraph_1590584528966_-1415344640",
      "dateCreated": "2020-05-27T13:02:08+0000",
      "dateStarted": "2020-05-27T14:31:53+0000",
      "dateFinished": "2020-05-27T14:31:53+0000",
      "status": "FINISHED",
      "$$hashKey": "object:25648"
    },
    {
      "title": "Проверяем данные в Кассандре",
      "text": "%cassandra\n\nselect * from zep.languages_stats per partition limit 1;",
      "user": "anonymous",
      "dateUpdated": "2020-05-27T14:29:12+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "language0",
                        "visible": true,
                        "width": "*",
                        "sort": {
                          "priority": 0,
                          "direction": "asc"
                        },
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "ts1",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "lang_name2",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "count3",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1,
                      "paginationPageSize": 250
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "language": "string",
                      "ts": "string",
                      "lang_name": "string",
                      "count": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/text",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "language\tts\tlang_name\tcount\nru\tWed May 27 14:25:00 UTC 2020\tРусский\t5\nur\tWed May 27 14:24:00 UTC 2020\tnull\t5\nes\tWed May 27 14:25:00 UTC 2020\tEspañol\t320\nml\tWed May 27 14:25:00 UTC 2020\tnull\t1\nsl\tWed May 27 14:25:00 UTC 2020\tnull\t1\nkn\tWed May 27 14:22:00 UTC 2020\tnull\t1\nja\tWed May 27 14:25:00 UTC 2020\t日本語 (にほんご)\t11\npl\tWed May 27 14:25:00 UTC 2020\tJęzyk polski\t2\nund\tWed May 27 14:25:00 UTC 2020\tnull\t29\ntl\tWed May 27 14:25:00 UTC 2020\tnull\t13\ncy\tWed May 27 14:23:00 UTC 2020\tnull\t1\neu\tWed May 27 14:24:00 UTC 2020\tnull\t1\nzh\tWed May 27 14:22:00 UTC 2020\t漢語\t1\nne\tWed May 27 14:24:00 UTC 2020\tnull\t1\nnl\tWed May 27 14:24:00 UTC 2020\tnull\t3\nvi\tWed May 27 14:22:00 UTC 2020\tnull\t1\ntr\tWed May 27 14:25:00 UTC 2020\tnull\t15\npt\tWed May 27 14:25:00 UTC 2020\tPortuguês\t78\nen\tWed May 27 14:25:00 UTC 2020\tEnglish\t833\nit\tWed May 27 14:25:00 UTC 2020\tItaliano\t10\nca\tWed May 27 14:25:00 UTC 2020\tnull\t12\nda\tWed May 27 14:23:00 UTC 2020\tnull\t1\nlv\tWed May 27 14:25:00 UTC 2020\tnull\t4\nde\tWed May 27 14:25:00 UTC 2020\tDeutsch\t15\nht\tWed May 27 14:25:00 UTC 2020\tnull\t1\nth\tWed May 27 14:25:00 UTC 2020\tnull\t2\nbg\tWed May 27 14:24:00 UTC 2020\tnull\t1\nbn\tWed May 27 14:23:00 UTC 2020\tnull\t1\nro\tWed May 27 14:24:00 UTC 2020\tnull\t1\nmy\tWed May 27 14:23:00 UTC 2020\tnull\t1\nta\tWed May 27 14:24:00 UTC 2020\tnull\t1\nsv\tWed May 27 14:24:00 UTC 2020\tnull\t2\nfi\tWed May 27 14:23:00 UTC 2020\tnull\t1\nko\tWed May 27 14:21:00 UTC 2020\tnull\t1\nfr\tWed May 27 14:25:00 UTC 2020\tFrançais\t22\net\tWed May 27 14:23:00 UTC 2020\tnull\t3\nhi\tWed May 27 14:25:00 UTC 2020\tnull\t6\nuk\tWed May 27 14:24:00 UTC 2020\tnull\t1\nmr\tWed May 27 14:24:00 UTC 2020\tnull\t1\nel\tWed May 27 14:22:00 UTC 2020\tΕλληνικά\t1\ngu\tWed May 27 14:20:00 UTC 2020\tnull\t1\niw\tWed May 27 14:20:00 UTC 2020\tnull\t1\nin\tWed May 27 14:25:00 UTC 2020\tnull\t50\nar\tWed May 27 14:25:00 UTC 2020\tالعربية\t2\nsi\tWed May 27 14:22:00 UTC 2020\tnull\t1\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590583683750_-1812557105",
      "id": "paragraph_1590583683750_-1812557105",
      "dateCreated": "2020-05-27T12:48:03+0000",
      "dateStarted": "2020-05-27T14:29:12+0000",
      "dateFinished": "2020-05-27T14:29:12+0000",
      "status": "FINISHED",
      "$$hashKey": "object:25649"
    },
    {
      "title": "Добавляем больше языков",
      "text": "%cassandra\n\ninsert into zep.languages(id, native_name) values ('fr', 'Français');\ninsert into zep.languages(id, native_name) values ('pt', 'Português');\ninsert into zep.languages(id, native_name) values ('el', 'Ελληνικά');\ninsert into zep.languages(id, native_name) values ('it', 'Italiano');\ninsert into zep.languages(id, native_name) values ('es', 'Español');\ninsert into zep.languages(id, native_name) values ('ar', 'العربية');\ninsert into zep.languages(id, native_name) values ('und', 'Undefined');\ninsert into zep.languages(id, native_name) values ('tr', 'Türkçe');\ninsert into zep.languages(id, native_name) values ('th', 'ไทย');\ninsert into zep.languages(id, native_name) values ('ca', 'Català');\ninsert into zep.languages(id, native_name) values ('ko', '한국어');\ninsert into zep.languages(id, native_name) values ('vi', 'Tiếng Việt');",
      "user": "anonymous",
      "dateUpdated": "2020-05-27T14:31:01+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/text",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\n\n<div class=\"container\">\n<div class=\"row text-center\">\n<h4>No Result</h4>\n</div>\n<br/>\n    <div class=\"row\">\n    <div class=\"col-md-3\"></div>\n    <div class=\"col-md-6 col-offset-md-3 table-responsive table-bordered\">\n        <table class=\"table\">\n            <caption><h5>Last query execution info</h5></caption>\n            <thead>\n                <tr>\n                    <th>Info</th>\n                    <th>Value</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>Statement</td>\n                    <td>insert into zep.languages(id, native_name) values ('vi', 'Tiếng Việt');</td>\n                </tr>\n                <tr>\n                    <td>Achieved Consistency</td>\n                    <td>N/A</td>\n                </tr>\n                <tr>\n                    <td>Tried Hosts</td>\n                    <td>10.101.34.94:9042</td>\n                </tr>\n                <tr>\n                    <td>Queried Hosts</td>\n                    <td>10.101.34.94:9042</td>\n                </tr>\n                <tr>\n                    <td>Schema In Agreement</td>\n                    <td>true</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    </div>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590584308135_1009797787",
      "id": "paragraph_1590584308135_1009797787",
      "dateCreated": "2020-05-27T12:58:28+0000",
      "dateStarted": "2020-05-27T14:29:26+0000",
      "dateFinished": "2020-05-27T14:29:26+0000",
      "status": "FINISHED",
      "$$hashKey": "object:25650"
    },
    {
      "title": "Проверяем данные в Кассандре еще раз - больше нет null для ",
      "text": "%cassandra\n\nselect * from zep.languages_stats per partition limit 1;",
      "user": "anonymous",
      "dateUpdated": "2020-05-27T14:29:59+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "language0",
                        "visible": true,
                        "width": "*",
                        "sort": {
                          "priority": 0,
                          "direction": "asc"
                        },
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "ts1",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "lang_name2",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "count3",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1,
                      "paginationPageSize": 250
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "language": "string",
                      "ts": "string",
                      "lang_name": "string",
                      "count": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/text",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "language\tts\tlang_name\tcount\nru\tWed May 27 14:26:00 UTC 2020\tРусский\t3\nur\tWed May 27 14:24:00 UTC 2020\tnull\t5\nes\tWed May 27 14:26:00 UTC 2020\tEspañol\t129\nml\tWed May 27 14:25:00 UTC 2020\tnull\t1\nsl\tWed May 27 14:25:00 UTC 2020\tnull\t1\nkn\tWed May 27 14:22:00 UTC 2020\tnull\t1\nja\tWed May 27 14:26:00 UTC 2020\t日本語 (にほんご)\t3\npl\tWed May 27 14:25:00 UTC 2020\tJęzyk polski\t4\nund\tWed May 27 14:26:00 UTC 2020\tUndefined\t13\ntl\tWed May 27 14:26:00 UTC 2020\tnull\t7\ncy\tWed May 27 14:26:00 UTC 2020\tnull\t1\neu\tWed May 27 14:25:00 UTC 2020\tnull\t2\nzh\tWed May 27 14:22:00 UTC 2020\t漢語\t1\nne\tWed May 27 14:24:00 UTC 2020\tnull\t1\nnl\tWed May 27 14:26:00 UTC 2020\tnull\t1\nvi\tWed May 27 14:22:00 UTC 2020\tnull\t1\ntr\tWed May 27 14:26:00 UTC 2020\tTürkçe\t2\npt\tWed May 27 14:26:00 UTC 2020\tPortuguês\t27\nen\tWed May 27 14:26:00 UTC 2020\tEnglish\t309\nit\tWed May 27 14:26:00 UTC 2020\tItaliano\t3\nca\tWed May 27 14:26:00 UTC 2020\tCatalà\t6\nda\tWed May 27 14:23:00 UTC 2020\tnull\t1\nlv\tWed May 27 14:26:00 UTC 2020\tnull\t1\nde\tWed May 27 14:26:00 UTC 2020\tDeutsch\t5\nht\tWed May 27 14:25:00 UTC 2020\tnull\t1\nth\tWed May 27 14:26:00 UTC 2020\tไทย\t1\nbg\tWed May 27 14:24:00 UTC 2020\tnull\t1\nbn\tWed May 27 14:23:00 UTC 2020\tnull\t1\ncs\tWed May 27 14:26:00 UTC 2020\tnull\t1\nro\tWed May 27 14:25:00 UTC 2020\tnull\t1\nmy\tWed May 27 14:23:00 UTC 2020\tnull\t1\nta\tWed May 27 14:24:00 UTC 2020\tnull\t1\nno\tWed May 27 14:26:00 UTC 2020\tnull\t1\nsv\tWed May 27 14:25:00 UTC 2020\tnull\t1\nfi\tWed May 27 14:23:00 UTC 2020\tnull\t1\nko\tWed May 27 14:21:00 UTC 2020\tnull\t1\nfr\tWed May 27 14:26:00 UTC 2020\tFrançais\t10\net\tWed May 27 14:26:00 UTC 2020\tnull\t1\nhi\tWed May 27 14:26:00 UTC 2020\tnull\t3\nuk\tWed May 27 14:24:00 UTC 2020\tnull\t1\nmr\tWed May 27 14:25:00 UTC 2020\tnull\t1\nel\tWed May 27 14:25:00 UTC 2020\tΕλληνικά\t1\ngu\tWed May 27 14:25:00 UTC 2020\tnull\t1\niw\tWed May 27 14:20:00 UTC 2020\tnull\t1\nin\tWed May 27 14:26:00 UTC 2020\tnull\t18\nar\tWed May 27 14:26:00 UTC 2020\tالعربية\t1\nsi\tWed May 27 14:22:00 UTC 2020\tnull\t1\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590589108415_-538010497",
      "id": "paragraph_1590589108415_-538010497",
      "dateCreated": "2020-05-27T14:18:28+0000",
      "dateStarted": "2020-05-27T14:29:59+0000",
      "dateFinished": "2020-05-27T14:29:59+0000",
      "status": "FINISHED",
      "$$hashKey": "object:25651"
    },
    {
      "text": "%spark\n\n// Эта команда работает поскольку Zeppelin работает на DSE Analytics, который автоматически регистрирует все таблицы в Cassandra.\n// Для OSS Spark, необходимо явно зарегистрировать таблицу как описано в документации:\n// https://github.com/datastax/spark-cassandra-connector/blob/master/doc/14_data_frames.md#example-creating-a-source-using-spark-sql\nz.show(spark.sql(\"select distinct language, lang_name, sum(count) as total_count from zep.languages_stats group by language, lang_name order by total_count desc\"))\n",
      "user": "anonymous",
      "dateUpdated": "2020-05-27T14:44:15+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "language": "string",
                      "lang_name": "string",
                      "total_count": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "language\tlang_name\ttotal_count\nen\tEnglish\t18997\nes\tEspañol\t6936\npt\tPortuguês\t1681\nin\tnull\t1053\nund\tUndefined\t720\nfr\tFrançais\t626\nja\t日本語 (にほんご)\t302\ntr\tTürkçe\t258\nit\tItaliano\t254\nca\tCatalà\t239\ntl\tnull\t230\nde\tDeutsch\t182\nhi\tnull\t152\nru\tРусский\t92\nth\tไทย\t74\npl\tJęzyk polski\t56\nar\tالعربية\t56\nnl\tnull\t41\nsv\tnull\t27\net\tnull\t26\nur\tnull\t20\nht\tnull\t14\ncy\tnull\t14\nro\tnull\t14\nml\tnull\t14\neu\tnull\t13\nmr\tnull\t10\ncs\tnull\t7\nel\tΕλληνικά\t6\nta\tnull\t6\ngu\tnull\t5\nzh\t漢語\t5\nuk\tnull\t5\nlv\tnull\t5\nko\tnull\t4\nno\tnull\t4\nsr\tnull\t4\nbn\tnull\t3\nda\tnull\t3\nsi\tnull\t3\nsl\tnull\t3\nfi\tnull\t3\nvi\tTiếng Việt\t3\niw\tnull\t2\nne\tnull\t2\nkn\tnull\t1\nmy\tnull\t1\npa\tnull\t1\nbg\tnull\t1\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://10.101.36.104:4040/jobs/job?id=425",
              "$$hashKey": "object:27321"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590589309705_-120403910",
      "id": "paragraph_1590589309705_-120403910",
      "dateCreated": "2020-05-27T14:21:49+0000",
      "dateStarted": "2020-05-27T14:44:08+0000",
      "dateFinished": "2020-05-27T14:44:14+0000",
      "status": "FINISHED",
      "$$hashKey": "object:25652"
    },
    {
      "title": "Останавливаем обработку потока",
      "text": "%spark\n\nquery.stop()\nquery.status",
      "user": "anonymous",
      "dateUpdated": "2020-05-27T14:35:49+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mres7\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.streaming.StreamingQueryStatus\u001b[0m =\n{\n  \"message\" : \"Stopped\",\n  \"isDataAvailable\" : false,\n  \"isTriggerActive\" : false\n}\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1590582148266_-1693487893",
      "id": "paragraph_1590582148266_-1693487893",
      "dateCreated": "2020-05-27T12:22:28+0000",
      "dateStarted": "2020-05-27T14:35:49+0000",
      "dateFinished": "2020-05-27T14:35:49+0000",
      "status": "FINISHED",
      "$$hashKey": "object:25653"
    }
  ],
  "name": "Cassandra Day Russia: Streaming demo",
  "id": "2F9Z4JREM",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0-preview1",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {},
  "path": "/Cassandra Day Russia: Streaming demo"
}